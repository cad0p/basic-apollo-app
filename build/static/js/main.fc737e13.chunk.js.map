{"version":3,"sources":["index.js"],"names":["client","ApolloClient","uri","ExchangeRates","useQuery","gql","loading","error","data","rates","map","currency","rate","key","App","render","document","getElementById"],"mappings":"8aAOA,IAAMA,EAAS,IAAIC,IAAa,CAC9BC,IAAK,0CAGP,SAASC,IAAiB,IAAD,EACUC,YAASC,IAAA,MAAlCC,EADe,EACfA,QAASC,EADM,EACNA,MAAOC,EADD,EACCA,KASxB,OAAIF,EAAgB,yCAChBC,EAAc,uCAEXC,EAAKC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACpB,yBAAKC,IAAKF,GACR,2BACGA,EADH,KACeC,OAMrB,IAAME,EAAM,kBACV,kBAAC,IAAD,CAAgBd,OAAQA,GACtB,6BACE,gEACA,kBAACG,EAAD,SAKNY,iBAAO,kBAACD,EAAD,MAASE,SAASC,eAAe,W","file":"static/js/main.fc737e13.chunk.js","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst client = new ApolloClient({\n  uri: \"https://48p1r2roz4.sse.codesandbox.io\"\n});\n\nfunction ExchangeRates() {\n  const { loading, error, data } = useQuery(gql`\n    {\n      rates(currency: \"USD\") {\n        currency\n        rate\n      }\n    }\n  `);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.rates.map(({ currency, rate }) => (\n    <div key={currency}>\n      <p>\n        {currency}: {rate}\n      </p>\n    </div>\n  ));\n}\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <div>\n      <h2>My first Apollo app ðŸš€</h2>\n      <ExchangeRates />\n    </div>\n  </ApolloProvider>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}